<UserControl x:Class="centre_soutien.Views.PlanningView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:centre_soutien.Views" 
             xmlns:viewModels="clr-namespace:centre_soutien.ViewModels"
             xmlns:system="clr-namespace:System;assembly=mscorlib" 
             mc:Ignorable="d" 
             d:DesignHeight="750" d:DesignWidth="950"
             FontFamily="Segoe UI">

    <UserControl.Resources>
        <!-- Styles communs (inspirés de GestionMatieresView) -->
        <Style TargetType="Button">
            <Setter Property="Padding" Value="10 5"/>
            <Setter Property="Margin" Value="0 5"/>
            <Setter Property="MinWidth" Value="100"/>
            <Setter Property="Background" Value="#FF3A4F7A"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect BlurRadius="3" ShadowDepth="1" Color="#40000000"/>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#FF4A6FA5"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="TextBox">
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="#DDD"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>

        <Style TargetType="ComboBox">
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="#DDD"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>
        
        <Style TargetType="DatePicker">
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Padding" Value="4"/> <!-- Ajustement du padding pour DatePicker -->
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="#DDD"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>

        <Style TargetType="Label">
            <Setter Property="Margin" Value="5"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>

        <!-- Style pour le DataGrid -->
        <Style TargetType="DataGrid">
            <Setter Property="Margin" Value="0 0 0 15"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="#DDD"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="RowBackground" Value="White"/>
            <Setter Property="AlternatingRowBackground" Value="#F5F5F5"/>
            <Setter Property="GridLinesVisibility" Value="None"/>
            <Setter Property="HeadersVisibility" Value="Column"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
        </Style>

        <Style TargetType="DataGridColumnHeader">
            <Setter Property="Background" Value="#FF3A4F7A"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Padding" Value="10 5"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
        </Style>

        <!-- Style pour les boutons plus petits dans le DataGrid -->
        <Style x:Key="DataGridButton" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
            <Setter Property="Padding" Value="5 2"/>
            <Setter Property="FontSize" Value="10"/>
            <Setter Property="MinWidth" Value="50"/> <!-- Réduit pour s'adapter -->
            <Setter Property="Margin" Value="2"/>
        </Style>
        
        <!-- Décommentez et assurez-vous que ces converters sont disponibles dans votre projet -->
        <!-- (soit globalement dans App.xaml, soit définis ici, soit dans un fichier de ressources partagé) -->
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <!-- Pour InverseBooleanToVisibilityConverter, vous devez avoir une classe qui implémente IValueConverter -->
        <!-- Exemple si vous avez une classe 'InverseBooleanToVisibilityConverter' dans le namespace 'local' : -->
        <!-- <local:InverseBooleanToVisibilityConverter x:Key="InverseBooleanToVisibilityConverter"/> -->
        <!-- Si vous n'en avez pas, vous pouvez en créer une simple : -->
        <!--
        public class InverseBooleanToVisibilityConverter : IValueConverter
        {
            public object Convert(object value, Type targetType, object parameter, CultureInfo culture)
            {
                bool bValue = (bool)value;
                return bValue ? Visibility.Collapsed : Visibility.Visible;
            }
            public object ConvertBack(object value, Type targetType, object parameter, CultureInfo culture) => throw new NotImplementedException();
        }
        -->

    </UserControl.Resources>

    <d:UserControl.DataContext>
        <viewModels:PlanningViewModel/>
    </d:UserControl.DataContext>

    <Grid Margin="15">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/> <!-- Titre -->
            <RowDefinition Height="Auto"/> <!-- Formulaire d'ajout/modification -->
            <RowDefinition Height="Auto"/> <!-- Titre Liste -->
            <RowDefinition Height="*"/>    <!-- DataGrid des créneaux -->
            <RowDefinition Height="Auto"/> <!-- StatusBar -->
        </Grid.RowDefinitions>

        <!-- Titre -->
        <TextBlock Grid.Row="0" Text="Planification des Créneaux Hebdomadaires" 
                   FontSize="24" FontWeight="SemiBold" Margin="0 0 0 15"
                   Foreground="#FF3A4F7A">
            <TextBlock.Effect>
                <DropShadowEffect BlurRadius="5" ShadowDepth="1" Color="#20000000"/>
            </TextBlock.Effect>
        </TextBlock>

        <!-- Formulaire d'Ajout/Modification de Créneau -->
        <Border Grid.Row="1" BorderThickness="0" CornerRadius="5" Margin="0 0 0 15"
                Background="White">
            <Border.Effect>
                <DropShadowEffect BlurRadius="10" ShadowDepth="1" Color="#20000000"/>
            </Border.Effect>
            <Grid Margin="10">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/> <!-- Labels -->
                    <ColumnDefinition Width="*"/>    <!-- Controls Col 1 -->
                    <ColumnDefinition Width="Auto"/> <!-- Labels Col 2 -->
                    <ColumnDefinition Width="*"/>    <!-- Controls Col 2 -->
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/> <!-- Groupe -->
                    <RowDefinition Height="Auto"/> <!-- Salle -->
                    <RowDefinition Height="Auto"/> <!-- Jour Semaine & Heure Début -->
                    <RowDefinition Height="Auto"/> <!-- Date Début Validité & Heure Fin -->
                    <RowDefinition Height="Auto"/> <!-- Date Fin Validité -->
                    <RowDefinition Height="Auto"/> <!-- Notes -->
                    <RowDefinition Height="Auto"/> <!-- Boutons -->
                </Grid.RowDefinitions>

                <Label Grid.Row="0" Grid.Column="0" Content="Groupe:"/>
                <ComboBox Grid.Row="0" Grid.Column="1" 
                          ItemsSource="{Binding AllGroupesActifs}"
                          SelectedItem="{Binding SelectedGroupeForNewCreneau, Mode=TwoWay}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock TextTrimming="CharacterEllipsis" ToolTip="{Binding}"> <!-- Tooltip pour voir le texte complet si tronqué -->
                                <Run Text="{Binding NomDescriptifGroupe, Mode=OneWay}" FontWeight="Bold"/>
                                <Run Text=" ("/><Run Text="{Binding Matiere.NomMatiere, Mode=OneWay}"/><Run Text=" - Prof: "/><Run Text="{Binding Professeur.NomComplet, Mode=OneWay}"/><Run Text=")"/>
                            </TextBlock>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>

                <Label Grid.Row="1" Grid.Column="0" Content="Salle:"/>
                <ComboBox Grid.Row="1" Grid.Column="1" 
                          ItemsSource="{Binding AllSallesActives}"
                          SelectedItem="{Binding SelectedSalleForNewCreneau, Mode=TwoWay}"
                          DisplayMemberPath="NomOuNumeroSalle"/>

                <Label Grid.Row="2" Grid.Column="0" Content="Jour Semaine:"/> <!-- Raccourci pour "Jour de la Semaine" -->
                <ComboBox Grid.Row="2" Grid.Column="1" 
                          ItemsSource="{Binding JoursDeLaSemaine}"
                          SelectedItem="{Binding SelectedJourSemaineForNewCreneau, Mode=TwoWay}"/>

                <Label Grid.Row="2" Grid.Column="2" Content="Heure Début:" Margin="15 5 5 5"/> <!-- Marge pour espacement colonne -->
                <TextBox Grid.Row="2" Grid.Column="3" Text="{Binding HeureDebutInput, UpdateSourceTrigger=PropertyChanged}" ToolTip="Format HH:MM"/>
                
                <Label Grid.Row="3" Grid.Column="0" Content="Début Validité:"/>
                <DatePicker Grid.Row="3" Grid.Column="1" 
                            SelectedDate="{Binding DateDebutValiditeInput, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                <Label Grid.Row="3" Grid.Column="2" Content="Heure Fin:" Margin="15 5 5 5"/> <!-- Marge pour espacement colonne -->
                <TextBox Grid.Row="3" Grid.Column="3" Text="{Binding HeureFinInput, UpdateSourceTrigger=PropertyChanged}" ToolTip="Format HH:MM"/>

                <Label Grid.Row="4" Grid.Column="0" Content="Fin Validité (Opt.):"/>
                <DatePicker Grid.Row="4" Grid.Column="1" 
                            SelectedDate="{Binding DateFinValiditeInput, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                
                <Label Grid.Row="5" Grid.Column="0" Content="Notes (Opt.):" VerticalAlignment="Top" Margin="5 8 5 5"/> <!-- Marge top pour aligner avec TextBox multiligne -->
                <TextBox Grid.Row="5" Grid.Column="1" Grid.ColumnSpan="3" Text="{Binding NotesNewCreneauInput, UpdateSourceTrigger=PropertyChanged}" 
                         TextWrapping="Wrap" AcceptsReturn="True" MinLines="2" MaxHeight="50" VerticalAlignment="Top"/>

                <StackPanel Grid.Row="6" Grid.Column="0" Grid.ColumnSpan="4" Orientation="Horizontal" HorizontalAlignment="Right" Margin="0 10 0 0">
                    <Button Content="Ajouter Créneau" Command="{Binding AddCreneauCommand}" Margin="0 0 5 0"/>
                    <Button Content="Modifier Créneau" Command="{Binding UpdateCreneauCommand}" Margin="0 0 5 0"/>
                    <Button Content="Vider Formulaire" Command="{Binding ClearFormCommand}" Margin="0 0 0 0"/>
                </StackPanel>
            </Grid>
        </Border>
        
        <TextBlock Grid.Row="2" Text="Créneaux Hebdomadaires Planifiés" 
                   FontSize="18" FontWeight="SemiBold" Margin="0 0 0 10" 
                   Foreground="#FF3A4F7A"/>

        <DataGrid Grid.Row="3" ItemsSource="{Binding CreneauxPlanifies}"
                  SelectedItem="{Binding SelectedCreneauForEditDelete, Mode=TwoWay}"
                  AutoGenerateColumns="False" IsReadOnly="True"
                  CanUserAddRows="False">
            <DataGrid.Columns>
                <DataGridTextColumn Header="ID" Binding="{Binding IDSeance, Mode=OneWay}" Width="Auto"/>
                <DataGridTextColumn Header="Jour" Binding="{Binding JourSemaine, Mode=OneWay}" Width="Auto"/>
                <DataGridTextColumn Header="Début" Binding="{Binding HeureDebut, Mode=OneWay, StringFormat=HH:mm}" Width="Auto"/>
                <DataGridTextColumn Header="Fin" Binding="{Binding HeureFin, Mode=OneWay, StringFormat=HH:mm}" Width="Auto"/>
                <DataGridTextColumn Header="Groupe" Binding="{Binding Groupe.NomDescriptifGroupe, Mode=OneWay}" Width="1.5*"/>
                <DataGridTextColumn Header="Matière" Binding="{Binding Groupe.Matiere.NomMatiere, Mode=OneWay}" Width="*"/>
                <DataGridTextColumn Header="Professeur" Binding="{Binding Groupe.Professeur.NomComplet, Mode=OneWay}" Width="*"/>
                <DataGridTextColumn Header="Salle" Binding="{Binding Salle.NomOuNumeroSalle, Mode=OneWay}" Width="0.8*"/>
                <DataGridTextColumn Header="Valide du" Binding="{Binding DateDebutValidite, Mode=OneWay, StringFormat=dd/MM/yyyy}" Width="Auto"/>
                <DataGridTextColumn Header="Valide au" Binding="{Binding DateFinValidite, Mode=OneWay, TargetNullValue='Indéfini', StringFormat=dd/MM/yyyy}" Width="Auto"/>
                <DataGridCheckBoxColumn Header="Actif" Binding="{Binding EstActif, Mode=OneWay}" Width="Auto"/>
                
                <DataGridTemplateColumn Header="Actions" Width="Auto" MinWidth="160"> <!-- Ajusté MinWidth -->
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                <Button Content="Désact." ToolTip="Désactiver ce créneau" Style="{StaticResource DataGridButton}"
                                        Command="{Binding DataContext.DeactivateCreneauCommand, RelativeSource={RelativeSource AncestorType=UserControl}}" 
                                        CommandParameter="{Binding}"
                                        Visibility="{Binding EstActif, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                                <Button Content="Réact." ToolTip="Réactiver ce créneau" Style="{StaticResource DataGridButton}"
                                        Command="{Binding DataContext.ActivateCreneauCommand, RelativeSource={RelativeSource AncestorType=UserControl}}" 
                                        CommandParameter="{Binding}"
                                        Visibility="{Binding EstActif, Converter={StaticResource InverseBooleanToVisibilityConverter}}"/>
                                <Button Content="Suppr." ToolTip="Supprimer ce créneau" Style="{StaticResource DataGridButton}"
                                        Command="{Binding DataContext.DeleteCreneauCommand, RelativeSource={RelativeSource AncestorType=UserControl}}" 
                                        CommandParameter="{Binding}"/>
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>

        <StatusBar Grid.Row="4" Background="#FF3A4F7A" Foreground="White">
            <StatusBarItem>
                <TextBlock Text="{Binding StatusMessage}" FontWeight="SemiBold"/>
            </StatusBarItem>
        </StatusBar>
    </Grid>
</UserControl>