<UserControl x:Class="centre_soutien.Views.GestionGroupesView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:centre_soutien.Views"
             xmlns:viewModels="clr-namespace:centre_soutien.ViewModels"
             mc:Ignorable="d" 
             d:DesignHeight="700" d:DesignWidth="900"
             FontFamily="Segoe UI">

    <UserControl.Resources>
        <!-- Styles communs (inspirés de GestionMatieresView) -->
        <Style TargetType="Button">
            <Setter Property="Padding" Value="10 5"/>
            <Setter Property="Margin" Value="0 5"/>
            <Setter Property="MinWidth" Value="100"/>
            <Setter Property="Background" Value="#FF3A4F7A"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect BlurRadius="3" ShadowDepth="1" Color="#40000000"/>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#FF4A6FA5"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="TextBox">
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="#DDD"/>
        </Style>

        <Style TargetType="ComboBox">
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="#DDD"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>

        <Style TargetType="Label">
            <Setter Property="Margin" Value="5"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>

        <!-- Style pour le DataGrid -->
        <Style TargetType="DataGrid">
            <Setter Property="Margin" Value="0 0 0 15"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="#DDD"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="RowBackground" Value="White"/>
            <Setter Property="AlternatingRowBackground" Value="#F5F5F5"/>
            <Setter Property="GridLinesVisibility" Value="None"/>
            <Setter Property="HeadersVisibility" Value="Column"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
        </Style>

        <Style TargetType="DataGridColumnHeader">
            <Setter Property="Background" Value="#FF3A4F7A"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Padding" Value="10 5"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
        </Style>
    </UserControl.Resources>

    <d:UserControl.DataContext>
        <viewModels:GroupeViewModel/>
    </d:UserControl.DataContext>

    <Grid Margin="15">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/> <!-- Titre -->
            <RowDefinition Height="*"/>    <!-- DataGrid -->
            <RowDefinition Height="Auto"/> <!-- Formulaire -->
            <RowDefinition Height="Auto"/> <!-- StatusBar -->
        </Grid.RowDefinitions>

        <!-- Titre -->
        <TextBlock Grid.Row="0" Text="Gestion des Groupes" 
                   FontSize="24" FontWeight="SemiBold" Margin="0 0 0 15"
                   Foreground="#FF3A4F7A">
            <TextBlock.Effect>
                <DropShadowEffect BlurRadius="5" ShadowDepth="1" Color="#20000000"/>
            </TextBlock.Effect>
        </TextBlock>

        <!-- DataGrid -->
        <DataGrid Grid.Row="1" ItemsSource="{Binding Groupes}"
                  SelectedItem="{Binding SelectedGroupe, Mode=TwoWay}"
                  AutoGenerateColumns="False" IsReadOnly="True"
                  CanUserAddRows="False">
            <DataGrid.Columns>
                <DataGridTextColumn Header="ID" Binding="{Binding IDGroupe}" Width="Auto"/>
                <DataGridTextColumn Header="Nom du Groupe" Binding="{Binding NomDescriptifGroupe}" Width="2*"/>
                <DataGridTextColumn Header="Matière" Binding="{Binding Matiere.NomMatiere}" Width="*"/>
                <DataGridTextColumn Header="Professeur" Binding="{Binding Professeur.NomComplet}" Width="*"/> 
                <!-- Assurez-vous que Professeur a une propriété NomComplet, sinon utilisez Professeur.Nom ou un DataTemplate -->
                <DataGridTextColumn Header="Niveau" Binding="{Binding Niveau}" Width="Auto"/>
                <DataGridTextColumn Header="Notes" Binding="{Binding Notes}" Width="2*"/>
                <DataGridCheckBoxColumn Header="Archivé" Binding="{Binding EstArchive}" Width="Auto"/>
            </DataGrid.Columns>
        </DataGrid>

        <!-- Formulaire -->
        <Border Grid.Row="2" BorderThickness="0" CornerRadius="5" Margin="0 0 0 15"
                Background="White">
            <Border.Effect>
                <DropShadowEffect BlurRadius="10" ShadowDepth="1" Color="#20000000"/>
            </Border.Effect>
            <Grid Margin="10">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/> <!-- Labels -->
                    <ColumnDefinition Width="*"/>    <!-- Controls -->
                    <ColumnDefinition Width="Auto"/>  <!-- Boutons -->
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/> <!-- Nom Groupe -->
                    <RowDefinition Height="Auto"/> <!-- Matière -->
                    <RowDefinition Height="Auto"/> <!-- Professeur -->
                    <RowDefinition Height="Auto"/> <!-- Niveau -->
                    <RowDefinition Height="Auto"/> <!-- Notes -->
                </Grid.RowDefinitions>

                <Label Grid.Row="0" Grid.Column="0" Content="Nom du Groupe:"/>
                <TextBox Grid.Row="0" Grid.Column="1" Text="{Binding NomDescriptifInput, UpdateSourceTrigger=PropertyChanged}"/>

                <Label Grid.Row="1" Grid.Column="0" Content="Matière:"/>
                <ComboBox Grid.Row="1" Grid.Column="1"
                          ItemsSource="{Binding AllMatieres}"
                          SelectedItem="{Binding SelectedMatiereForForm, Mode=TwoWay}"
                          DisplayMemberPath="NomMatiere"  
                          SelectedValuePath="IDMatiere"/>

                <Label Grid.Row="2" Grid.Column="0" Content="Professeur:"/>
                <ComboBox Grid.Row="2" Grid.Column="1"
                          ItemsSource="{Binding AllProfesseurs}"
                          SelectedItem="{Binding SelectedProfesseurForForm, Mode=TwoWay}"
                          DisplayMemberPath="NomComplet"/> 
                <!-- Assurez-vous que Professeur a une propriété NomComplet. 
                     Alternativement, utilisez un ItemTemplate pour afficher Nom et Prénom si NomComplet n'existe pas.
                     Exemple avec ItemTemplate (si NomComplet n'existe pas):
                     <ComboBox.ItemTemplate>
                         <DataTemplate>
                             <TextBlock>
                                 <TextBlock.Text>
                                     <MultiBinding StringFormat="{}{0} {1}">
                                         <Binding Path="Nom"/>
                                         <Binding Path="Prenom"/>
                                     </MultiBinding>
                                 </TextBlock.Text>
                             </TextBlock>
                         </DataTemplate>
                     </ComboBox.ItemTemplate>
                -->
                               
                <Label Grid.Row="3" Grid.Column="0" Content="Niveau:"/>
                <TextBox Grid.Row="3" Grid.Column="1" Text="{Binding NiveauInput, UpdateSourceTrigger=PropertyChanged}"/>
                
                <Label Grid.Row="4" Grid.Column="0" Content="Notes:"/>
                <TextBox Grid.Row="4" Grid.Column="1" Text="{Binding NotesInput, UpdateSourceTrigger=PropertyChanged}" 
                         TextWrapping="Wrap" AcceptsReturn="True" MinLines="2" MaxHeight="60"/>

                <!-- Boutons d'action -->
                <StackPanel Grid.Row="0" Grid.RowSpan="5" Grid.Column="2" Orientation="Vertical" 
                            Margin="15 0 0 0" VerticalAlignment="Top">
                    <Button Content="Ajouter" Command="{Binding AddGroupeCommand}"/>
                    <Button Content="Modifier" Command="{Binding UpdateGroupeCommand}"/>
                    <Button Content="Archiver" Command="{Binding ArchiveGroupeCommand}"/>
                    <Button Content="Nouveau" Command="{Binding ClearFormCommand}" Margin="0 15 0 0"/> <!-- Margin top pour espacer comme dans l'exemple -->
                </StackPanel>
            </Grid>
        </Border>

        <!-- Barre de statut -->
        <StatusBar Grid.Row="3" Background="#FF3A4F7A" Foreground="White">
            <StatusBarItem>
                <TextBlock Text="{Binding StatusMessage}" FontWeight="SemiBold"/>
            </StatusBarItem>
        </StatusBar>
    </Grid>
</UserControl>